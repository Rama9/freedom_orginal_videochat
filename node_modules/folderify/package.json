{
  "name": "folderify",
  "description": "Expose the content of each file in a folder as an object property.",
  "version": "0.6.0",
  "homepage": "https://github.com/parroit/folderify",
  "author": {
    "name": "parroit",
    "email": "andrea.parodi@ebansoftware.net"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/parroit/folderify.git"
  },
  "bugs": {
    "url": "https://github.com/parroit/folderify/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/parroit/folderify/blob/master/LICENSE-MIT"
    }
  ],
  "main": "lib/folderify",
  "engines": {
    "node": ">= 0.10.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt": "~0.4.1",
    "grunt-mocha-test": "~0.7.0",
    "expect.js": "~0.2.0",
    "grunt-contrib-watch": "~0.5.3"
  },
  "keywords": [],
  "dependencies": {
    "lodash": "~2.4.1",
    "brfs": "0.0.8",
    "include-folder": "~0.7.0",
    "through": "~2.3.4",
    "falafel": "~0.3.1",
    "concat-stream": "~1.2.1"
  },
  "readme": "# folderify\r\n[![Build Status](https://secure.travis-ci.org/parroit/folderify.png?branch=master)](http://travis-ci.org/parroit/folderify)  [![Npm module](https://badge.fury.io/js/folderify.png)](https://npmjs.org/package/folderify) [![Code Climate](https://codeclimate.com/github/parroit/folderify.png)](https://codeclimate.com/github/parroit/folderify)\r\n\r\nbrowserify call to [includeFolder](https://github.com/parroit/include-folder)\r\n\r\n\r\nThis module is a plugin for [browserify](http://browserify.org) to parse the AST\r\nfor `includeFolder()` calls so that you can inline folder contents into your\r\nbundles.\r\n\r\nEven though this module is intended for use with browserify, nothing about it is\r\nparticularly specific to browserify so it should be generally useful in other\r\nprojects.\r\n\r\n## Getting Started\r\nInstall the module with: `npm install folderify --save`\r\n\r\nthen, for a main.js:\r\n\r\n``` js\r\nvar includeFolder = require('include-folder'),\r\n    folder = includeFolder(\"./aFolder\");\r\n```\r\n\r\nand a [aFolder like this](https://github.com/parroit/include-folder/tree/master/test/files):\r\n\r\n\r\nwhen you run the browserify command:\r\n\r\n```\r\n$ browserify -t folderify main.js > bundle.js\r\n```\r\n\r\nnow in the bundle output file you get,\r\n\r\n``` js\r\nvar includeFolder = undefined,\r\n    folder =  {\r\n               file3OtherFile: 'this is file3OtherContent content',\r\n               file1: 'this is file1 content',\r\n               file1_1: 'this is file1_1 content'\r\n           };\r\n```\r\n\r\n\r\n## or with the api\r\n\r\n``` js\r\nvar browserify = require('browserify');\r\nvar fs = require('fs');\r\n\r\nvar b = browserify('example/main.js');\r\nb.transform('folderify');\r\n\r\nb.bundle().pipe(fs.createWriteStream('bundle.js'));\r\n```\r\n\r\n\r\n\r\n\r\n##How it works\r\n\r\nFolderify inline a whole directory content in browserify results.\r\n\r\n1. It uses falafel to intercepts calls to [include-folder](https://github.com/parroit/include-folder)\r\n2. use include-folder to generate source code of a function with a fs.readFileSync call for each file in directory\r\n3. feed brfs stream with generated source code\r\n4. replace include-folder call with brfs output\r\n\r\n\r\n##Use cases\r\n\r\nI use it to inline my HTML templates folder when I browserify\r\n sites, but I guess it could be useful in many situations...\r\n\r\n\r\n\r\n## Contributing\r\nIn lieu of a formal styleguide, take care to maintain the existing coding style.\r\nAdd unit tests for any new or changed functionality.\r\n\r\n\r\n## License\r\nCopyright (c) 2013 parroit  \r\nLicensed under the MIT license.\r\n\r\n",
  "readmeFilename": "README.md",
  "_id": "folderify@0.6.0",
  "dist": {
    "shasum": "828a87a2c84bea1fe80115efce1fe54c42c3c85a"
  },
  "_from": "folderify@^0.6.0",
  "_resolved": "https://registry.npmjs.org/folderify/-/folderify-0.6.0.tgz"
}
